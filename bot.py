import telebot
from telebot.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
import os
import time
from weather import Weather, Unit


weather = Weather(unit=Unit.CELSIUS)
forecasts_moscow = weather.lookup_by_location('moscow').forecast
forecasts_swamp = weather.lookup_by_location('petersburg').forecast
# –ó–¥–µ—Å—å —Å –ø–æ–º–æ—â—å—é weather-api –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã,
# —Ç.–∫. –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏

os.startfile(os.path.dirname(__file__) + "/Ultrasurf.exe")
# –ü–æ—Å–ª–µ —á–µ–≥–æ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–∫—Å–∏. fck da –†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä
time.sleep(15)
token = '776536658:AAHuHAi28nhFCKyGgASAHWd-063hyItVEmQ'
bot = telebot.TeleBot(token)


def activity_ask(message: Message):  # –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —Ñ–ª–µ–∫—Å –∏–ª–∏ –∂–µ —á–∏–ª–ª
    keyboard = InlineKeyboardMarkup()
    button_flex = InlineKeyboardButton(text='ü§©', callback_data='set_activity_flex')
    button_chill = InlineKeyboardButton(text='ü§§', callback_data='set_activity_chill')
    keyboard.add(button_flex, button_chill)
    bot.send_message(message.chat.id, text='–§–ª–µ–∫—Å–∏—Ç—å –∏–ª–∏ —á–∏–ª–ª–∏—Ç—å? –ü–æ—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è!',
                     reply_markup=keyboard)


def city_ask(message: Message):  # –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
    keyboard = InlineKeyboardMarkup()
    button_moscow = InlineKeyboardButton(text='–ú–æ—Å–∫–≤–∞', callback_data="set_city_moscow")
    button_swamp = InlineKeyboardButton(text='–ë–æ–ª–æ.. –û–π, –≤ —Å–º—ã—Å–ª–µ –ü–∏—Ç–µ—Ä', callback_data="set_city_swamp")
    keyboard.add(button_moscow, button_swamp)
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥, –∏ —è –æ—Ç–≤–µ–¥—É'
                                           ' –í–∞—Å –≤ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –º–µ—Å—Ç–µ—á–∫–æ:',
                     reply_markup=keyboard)


def digest(message: Message):  # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–π–¥–∂–µ—Å—Ç–æ–º –æ—Ç kudago.com
    if city == 'swamp':
        bot.send_message(message.chat.id,
                         '–í–æ—Ç —Å–≤–µ–∂–∏–π –¥–∞–π–¥–∂–µ—Å—Ç'
                         ' –¥–ª—è –í–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –æ—Ç '
                         'kudago: https://kudago.com/spb/ ')
    elif city == 'moscow':
        bot.send_message(message.chat.id,
                         '–í–æ—Ç —Å–≤–µ–∂–∏–π –¥–∞–π–¥–∂–µ—Å—Ç'
                         ' –¥–ª—è –í–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –æ—Ç '
                         'kudago: https://kudago.com/msk/ ')
    else:
        bot.send_message(message.chat.id,
                         '–ü–æ—Ö–æ–∂–µ, –≤—ã –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥...'
                         ' –ù–∞—á–Ω—ë–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å? –ñ–º–∏—Ç–µ: /start')


@bot.message_handler(commands=['help'])  # –õ–æ–≤–µ—Ü –∫–æ–º–∞–Ω–ª—ã help
def command_handler(message: Message):
    bot.send_message(message.chat.id, 'No description yet...')


@bot.message_handler(commands=['start'])  # –õ–æ–≤–µ—Ü –∫–æ–º–∞–Ω–¥—ã start
def command_handler(message: Message):
    city_ask(message)


@bot.callback_query_handler(func=lambda call: True)  # –õ–æ–≤–µ—Ü –∫–Ω–æ–ø–æ–∫
def callback_inline(call):
    if call.data.startswith('set_city_'):
        global city, activity
        bot.send_message(chat_id=call.message.chat.id,
                         text='–ì–æ—Ä–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω!')
        activity_ask(call.message)
        if call.data == 'set_city_moscow':
            city = 'moscow'
        else:
            city = 'swamp'

    elif call.data == 'set_activity_flex':
        bot.send_message(chat_id=call.message.chat.id,
                         text='–ó–Ω–∞—á–∏—Ç, —Å–µ–≥–æ–¥–Ω—è –∑–∞–∂–∏–≥–∞–µ–º!'
                              ' –°–µ–π—á–∞—Å –ø–æ–¥–±–µ—Ä—É —á—Ç–æ-–Ω–∏–±—É–¥—å'
                              ' –ø–æ–¥—Ö–æ–¥—è—â–µ–µ.')
        activity = 'flex'

    elif call.data == 'set_activity_chill':
        bot.send_message(chat_id=call.message.chat.id,
                         text='–í—Ä–µ–º—è –∫–∞–∫ —Å–ª–µ–¥—É–µ—Ç –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.'
                              ' –°–µ–π—á–∞—Å –ø–æ–¥–±–µ—Ä—É —á—Ç–æ-–Ω–∏–±—É–¥—å'
                              ' –ø–æ–¥—Ö–æ–¥—è—â–µ–µ.')
        activity = 'chill'


@bot.message_handler(content_types=['text'])  # –õ–æ–≤–µ—Ü –∞–ø–¥–µ–π—Ç–æ–≤ (–Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
@bot.edited_message_handler(content_types=['text'])
def text_handler(message: Message):
    if '–≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥' in message.text.lower():
        city_ask(message)
    elif '–ø–æ–≥–æ–¥–∞' in message.text.lower():
        if city == 'swamp':
            bot.send_message(message.chat.id,
                             f'–°–µ–≥–æ–¥–Ω—è {forecasts_swamp[0].text},'
                             ' –æ–∂–∏–¥–∞–µ—Ç—Å—è —Ç–µ–º–ø–∞—Ä–∞—Ç—É—Ä–∞'
                             f' –æ—Ç {forecasts_swamp[0].low}'
                             f' –¥–æ {forecasts_swamp[0].high}'
                             ' –ø–æ –¶–µ–ª—å—Å–∏—é.')
        elif city == 'moscow':
            bot.send_message(message.chat.id,
                             f'–°–µ–≥–æ–¥–Ω—è {forecasts_moscow[0].text},'
                             ' –æ–∂–∏–¥–∞–µ—Ç—Å—è —Ç–µ–º–ø–∞—Ä–∞—Ç—É—Ä–∞'
                             f' –æ—Ç {forecasts_moscow[0].low}'
                             f' –¥–æ {forecasts_moscow[0].high}'
                             ' –ø–æ –¶–µ–ª—å—Å–∏—é.')
    elif '–¥–∞–π–¥–∂–µ—Å—Ç' in message.text.lower():
        digest(message)
    elif '–ø—Ä–∏–≤–µ—Ç' in message.text.lower():
        bot.send_message(message.chat.id, '–¢–µ–±–µ —Ç–æ–∂–µ –ø—Ä–∏–≤–µ—Ç!')
    else:
        bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é')


print('–ù—É —á–µ, –ø–æ–≥–Ω–∞–ª–∏?')
bot.polling(timeout=60)  # –û–∂–∏–¥–∞–µ–º —Ä–µ—Å–ø–æ–Ω—Å–∞
